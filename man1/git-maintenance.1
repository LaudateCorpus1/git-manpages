'\" t
.\"     Title: git-maintenance
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 10/29/2020
.\"    Manual: Git Manual
.\"    Source: Git 2.29.2.56.gad27df6a5c
.\"  Language: English
.\"
.TH "GIT\-MAINTENANCE" "1" "10/29/2020" "Git 2\&.29\&.2\&.56\&.gad27df6" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-maintenance \- Run tasks to optimize Git repository data
.SH "SYNOPSIS"
.sp
.nf
\fIgit maintenance\fR run [<options>]
.fi
.sp
.SH "DESCRIPTION"
.sp
Run tasks to optimize Git repository data, speeding up other Git commands and reducing storage requirements for the repository\&.
.sp
Git commands that add repository data, such as \fBgit add\fR or \fBgit fetch\fR, are optimized for a responsive user experience\&. These commands do not take time to optimize the Git data, since such optimizations scale with the full size of the repository while these user commands each perform a relatively small action\&.
.sp
The \fBgit maintenance\fR command provides flexibility for how to optimize the Git repository\&.
.SH "SUBCOMMANDS"
.PP
run
.RS 4
Run one or more maintenance tasks\&. If one or more
\fB\-\-task\fR
options are specified, then those tasks are run in that order\&. Otherwise, the tasks are determined by which
\fBmaintenance\&.<task>\&.enabled\fR
config options are true\&. By default, only
\fBmaintenance\&.gc\&.enabled\fR
is true\&.
.RE
.SH "TASKS"
.PP
commit\-graph
.RS 4
The
\fBcommit\-graph\fR
job updates the
\fBcommit\-graph\fR
files incrementally, then verifies that the written data is correct\&. The incremental write is safe to run alongside concurrent Git processes since it will not expire
\fB\&.graph\fR
files that were in the previous
\fBcommit\-graph\-chain\fR
file\&. They will be deleted by a later run based on the expiration delay\&.
.RE
.PP
prefetch
.RS 4
The
\fBprefetch\fR
task updates the object directory with the latest objects from all registered remotes\&. For each remote, a
\fBgit fetch\fR
command is run\&. The refmap is custom to avoid updating local or remote branches (those in
\fBrefs/heads\fR
or
\fBrefs/remotes\fR)\&. Instead, the remote refs are stored in
\fBrefs/prefetch/<remote>/\fR\&. Also, tags are not updated\&.
.sp
This is done to avoid disrupting the remote\-tracking branches\&. The end users expect these refs to stay unmoved unless they initiate a fetch\&. With prefetch task, however, the objects necessary to complete a later real fetch would already be obtained, so the real fetch would go faster\&. In the ideal case, it will just become an update to bunch of remote\-tracking branches without any object transfer\&.
.RE
.PP
gc
.RS 4
Clean up unnecessary files and optimize the local repository\&. "GC" stands for "garbage collection," but this task performs many smaller tasks\&. This task can be expensive for large repositories, as it repacks all Git objects into a single pack\-file\&. It can also be disruptive in some situations, as it deletes stale data\&. See
\fBgit-gc\fR(1)
for more details on garbage collection in Git\&.
.RE
.PP
loose\-objects
.RS 4
The
\fBloose\-objects\fR
job cleans up loose objects and places them into pack\-files\&. In order to prevent race conditions with concurrent Git commands, it follows a two\-step process\&. First, it deletes any loose objects that already exist in a pack\-file; concurrent Git processes will examine the pack\-file for the object data instead of the loose object\&. Second, it creates a new pack\-file (starting with "loose\-") containing a batch of loose objects\&. The batch size is limited to 50 thousand objects to prevent the job from taking too long on a repository with many loose objects\&. The
\fBgc\fR
task writes unreachable objects as loose objects to be cleaned up by a later step only if they are not re\-added to a pack\-file; for this reason it is not advisable to enable both the
\fBloose\-objects\fR
and
\fBgc\fR
tasks at the same time\&.
.RE
.PP
incremental\-repack
.RS 4
The
\fBincremental\-repack\fR
job repacks the object directory using the
\fBmulti\-pack\-index\fR
feature\&. In order to prevent race conditions with concurrent Git commands, it follows a two\-step process\&. First, it calls
\fBgit multi\-pack\-index expire\fR
to delete pack\-files unreferenced by the
\fBmulti\-pack\-index\fR
file\&. Second, it calls
\fBgit multi\-pack\-index repack\fR
to select several small pack\-files and repack them into a bigger one, and then update the
\fBmulti\-pack\-index\fR
entries that refer to the small pack\-files to refer to the new pack\-file\&. This prepares those small pack\-files for deletion upon the next run of
\fBgit multi\-pack\-index expire\fR\&. The selection of the small pack\-files is such that the expected size of the big pack\-file is at least the batch size; see the
\fB\-\-batch\-size\fR
option for the
\fBrepack\fR
subcommand in
\fBgit-multi-pack-index\fR(1)\&. The default batch\-size is zero, which is a special case that attempts to repack all pack\-files into a single pack\-file\&.
.RE
.SH "OPTIONS"
.PP
\-\-auto
.RS 4
When combined with the
\fBrun\fR
subcommand, run maintenance tasks only if certain thresholds are met\&. For example, the
\fBgc\fR
task runs when the number of loose objects exceeds the number stored in the
\fBgc\&.auto\fR
config setting, or when the number of pack\-files exceeds the
\fBgc\&.autoPackLimit\fR
config setting\&.
.RE
.PP
\-\-quiet
.RS 4
Do not report progress or other information over
\fBstderr\fR\&.
.RE
.PP
\-\-task=<task>
.RS 4
If this option is specified one or more times, then only run the specified tasks in the specified order\&. If no
\fB\-\-task=<task>\fR
arguments are specified, then only the tasks with
\fBmaintenance\&.<task>\&.enabled\fR
configured as
\fBtrue\fR
are considered\&. See the
\fITASKS\fR
section for the list of accepted
\fB<task>\fR
values\&.
.RE
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
